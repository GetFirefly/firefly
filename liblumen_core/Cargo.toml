[package]
name = "liblumen_core"
version = "0.1.0"
authors = ["Paul Schoenfelder <paulschoenfelder@gmail.com>", "Luke Imhoff <Kronic.Deth@gmail.com>"]
publish = false
edition = "2018"
build = "build.rs"

[lib]
crate-type = ["staticlib", "rlib"]

[dependencies]
rustversion = "1.0"
cfg-if = "0.1"
lazy_static = "1.2"
liblumen_core_macros = { path = "../liblumen_core_macros" }

# On wasm32-unknown-unknown, use dlmalloc for malloc/free
[target.'cfg(all(target_arch = "wasm32", target_vendor = "unknown"))'.dependencies.dlmalloc]
version = "0.1"
features = ["allocator-api"]

# We use libc for all platforms except wasm32-unknown-unknown
# NOTE: On win32 we use libc for malloc/free
[target.'cfg(any(not(target_arch = "wasm32")))'.dependencies.libc]
default-features = false
features = ["align"]
version = "0.2"

[target.'cfg(all(target_arch = "wasm32", any(target_env = "wasi", target_os = "emscripten")))'.dependencies.libc]
default-features = false
features = ["align"]
version = "0.2"

[dependencies.lock_api]
git = "https://github.com/KronicDeth/parking_lot.git"
branch = "wasm32-time_web_sys"
features = ["nightly"]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.parking_lot]
git = "https://github.com/KronicDeth/parking_lot.git"
branch = "wasm32-time_web_sys"
features = ["nightly"]

[target.'cfg(target_arch = "wasm32")'.dependencies.parking_lot]
git = "https://github.com/KronicDeth/parking_lot.git"
branch = "wasm32-time_web_sys"
features = ["nightly", "time_web_sys"]

# Windows also requires additional APis for implementing mmap
[target.'cfg(windows)'.dependencies.winapi]
features = ["memoryapi", "heapapi", "synchapi", "winbase", "sysinfoapi"]
version = "0.3"
