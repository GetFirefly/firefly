[package]
name = "firefly_mlir"
description = "Provides bindings to MLIR and our custom dialects for use by the Firefly compiler"
version.workspace = true
rust-version.workspace = true
authors.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
edition.workspace = true
publish.workspace = true

build = "build.rs"
links = "mlir"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true, features = ["std"] }
firefly_binary = { path = "../../library/binary", features = ["std"] }
firefly_number = { path = "../../library/number", features = ["std"] }
firefly_intern = { path = "../intern", features = ["std"] }
firefly_llvm = { path = "../llvm" }
firefly_session = { path = "../session" }
firefly_target = { path = "../target" }
firefly_util = { path = "../util" }
firefly_pass = { path = "../pass" }
firefly_diagnostics = { path = "../diagnostics" }
firefly_compiler_macros = { path = "../macros" }
paste.workspace = true
rand.workspace = true
thiserror.workspace = true

[build-dependencies]
anyhow = { workspace = true, features = ["std"] }
cc = "1.0"
cmake = "0.1"
which.workspace = true
firefly_llvm = { path = "../llvm" }
