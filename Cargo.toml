[workspace]

members = [
  "compiler/codegen",
  "compiler/driver",
  "compiler/llvm",
  "compiler/macros",
  "compiler/mlir",
  "compiler/profiling",
  "compiler/session",
  "compiler/target",
  "compiler/term",
  "examples/interpreter-in-browser",
  "examples/spawn-chain",
  "interpreter",
  "liblumen_alloc",
  "liblumen_alloc_macros",
  "liblumen_arena",
  "liblumen_beam",
  "liblumen_core",
  "liblumen_core_macros",
  "liblumen_util",
  "lumen",
  "native_implemented/macro",
  "native_implemented/otp",
  "native_implemented/web",
  "runtimes/core",
  "runtimes/crt",
  "runtimes/full",
  "runtimes/minimal",
]

default-members = [
  "compiler/codegen",
  "compiler/driver",
  "compiler/llvm",
  "compiler/macros",
  "compiler/mlir",
  "compiler/profiling",
  "compiler/session",
  "compiler/target",
  "compiler/term",
  "interpreter",
  "liblumen_alloc",
  "liblumen_alloc_macros",
  "liblumen_arena",
  "liblumen_beam",
  "liblumen_core",
  "liblumen_core_macros",
  "liblumen_util",
  "lumen",
  "native_implemented/macro",
  "native_implemented/otp",
  "native_implemented/web",
  "runtimes/crt",
  "runtimes/full",
]

[profile.release]
# Experimentally determined to give the smallest size out of all `opt-level`s (0-3,'s','z') and
# `lto`s (true and false) for `examples/spawn-chain/pkg/spawn_chaing_bg.wasm`
opt-level = 2
lto = false

[patch."https://github.com/eirproject/eir"]
libeir_diagnostics = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_frontend = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_syntax_erl = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_ir = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_intern = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_lowerutils = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_passes = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_util_datastructures = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_util_dot_graph = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_util_number = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_util_parse = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_util_parse_listing = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
libeir_util_pattern_compiler = { git = "https://github.com/KronicDeth/eir", branch = "and-or" }
