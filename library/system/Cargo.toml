[package]
name = "firefly_system"
description = "The system interface library. Provides common low-level APIs across all supported platforms."
version.workspace = true
rust-version.workspace = true
authors.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
edition.workspace = true
publish.workspace = true

[dependencies]
cfg-if.workspace = true
parking_lot.workspace = true
parking_lot_core.workspace = true
atomig = "0.4"

# For non-WASI, non-Emscripten wasm targets, we need web-sys for a few low-level APIs
[target.'cfg(all(target_family = "wasm", not(target_os = "wasi"), not(target_os = "emscripten")))'.dependencies.web-sys]
version = "0.3"
features = ['Window', 'Performance', 'PerformanceTiming']

# For non-WASI, non-Emscripten wasm targets, we need web-sys for a few low-level APIs
[target.'cfg(all(target_family = "wasm", not(target_os = "wasi"), not(target_os = "emscripten")))'.dependencies.js-sys]
version = "0.3"

# We use libc for all platforms except wasm
#
# NOTE: On win32 we use libc for malloc/free
[target.'cfg(any(not(target_family = "wasm")))'.dependencies.libc]
workspace = true
features = ["align"]

# Windows also requires additional APis for implementing mmap
[target.'cfg(windows)'.dependencies.winapi]
features = ["memoryapi", "heapapi", "synchapi", "winbase", "sysinfoapi"]
version = "0.3"
