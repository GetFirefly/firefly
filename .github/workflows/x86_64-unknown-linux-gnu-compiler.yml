name: x86_64-unknown-linux-gnu compiler

on:
  push:
    paths-ignore:
    - '*.md'

env:
  TOOLCHAIN: nightly-2022-08-08
  LLVM_RELEASE: firefly-15.0.0-dev_2022-08-27
  LLVM_LINK_LLVM_DYLIB: ON
  FIREFLY_BUILD_TYPE: static

jobs:
  compiler:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Env
        run: |
          echo "$(whoami)"
          if [ -z "${XDG_DATA_HOME}" ]; then
            sudo mkdir -p $HOME/.local/share/llvm
            sudo chown -R runner $HOME/.local/share/llvm
            echo "XDG_DATA_HOME=$HOME/.local/share" >> $GITHUB_ENV
          fi
          echo "$PWD/bin" >> $GITHUB_PATH
      - name: Install Ninja
        run: |
          wget "https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip"
          unzip ninja-linux.zip -d /usr/local/bin
          rm ninja-linux.zip
      - name: Install LLVM
        run: |
          mkdir -p "$XDG_DATA_HOME/llvm/firefly"
          cd "$XDG_DATA_HOME/llvm/firefly"
          wget "https://github.com/getfirefly/llvm-project/releases/download/${LLVM_RELEASE}/clang+llvm-15.0.0-x86_64-linux-gnu.tar.gz"
          tar -xz --strip-components 1 -f clang+llvm-15.0.0-x86_64-linux-gnu.tar.gz
          rm clang+llvm-15.0.0-x86_64-linux-gnu.tar.gz
          cd -
      - name: Install Toolchain
        run: |
          rustup toolchain install ${TOOLCHAIN}
          rustup default ${TOOLCHAIN}
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ github.workflow }}-${{ github.job }}-toolchain-${{ env.TOOLCHAIN }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.TOOLCHAIN }}
          command: install
          args: cargo-make
      - name: Build Compiler
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.TOOLCHAIN }}
          command: make
          args: firefly
      - name: Run lit tests
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.TOOLCHAIN }}
          command: make
          args: test-lit
