name: x86_64-unknown-linux-gnu compiler

on:
  push:
    paths-ignore:
    - '*.md'

env:
  FIREFLY_BUILD_TYPE: static
  LLVM_LINK_LLVM_DYLIB: OFF
  LLVM_VERSION: 15
  LLVM_PREFIX: /usr/lib/llvm-15
  CARGO_MAKE_TOOLCHAIN: nightly-2022-11-02

jobs:
  compiler:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Env
        run: |
          echo "$(whoami)"
          if [ -z "${XDG_DATA_HOME}" ]; then
            sudo mkdir -p $HOME/.local/share/llvm
            sudo chown -R runner $HOME/.local/share/llvm
            echo "XDG_DATA_HOME=$HOME/.local/share" >> $GITHUB_ENV
          fi
          echo "$PWD/bin" >> $GITHUB_PATH
      - name: Install Ninja
        run: |
          wget "https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip"
          unzip ninja-linux.zip -d /usr/local/bin
          rm ninja-linux.zip
      - name: Install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh "${LLVM_VERSION}"
          if ! llvm-config --prefix; then
            echo "$(llvm-config --prefix)"
            exit 1
          fi
          echo "LLVM_PREFIX=$(llvm-config --prefix)" >> $GITHUB_ENV
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.CARGO_MAKE_TOOLCHAIN }}
          override: true
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ github.workflow }}-${{ github.job }}-toolchain-${{ env.CARGO_MAKE_TOOLCHAIN }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.CARGO_MAKE_TOOLCHAIN }}
          command: install
          args: cargo-make
      - name: Build Compiler
        uses: actions-rs/cargo@v1
        env:
          CC: clang
          CXX: clang++
        with:
          command: make
          args: firefly
      - name: Run compiler unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "-p firefly_intern -p firefly_parser -p firefly_target -p firefly_syntax_erl -p firefly_syntax_pp"
      - name: Run literate tests
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: test-lit
